{
  "version": 3,
  "sources": ["../@tsparticles/engine/browser/Core/Utils/Constants.js", "../@tsparticles/engine/browser/Enums/Directions/MoveDirection.js", "../@tsparticles/engine/browser/Utils/TypeUtils.js", "../@tsparticles/engine/browser/Core/Utils/Vectors.js", "../@tsparticles/engine/browser/Utils/NumberUtils.js", "../@tsparticles/engine/browser/Enums/Modes/AnimationMode.js", "../@tsparticles/engine/browser/Enums/AnimationStatus.js", "../@tsparticles/engine/browser/Enums/Types/DestroyType.js", "../@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js", "../@tsparticles/engine/browser/Enums/Modes/PixelMode.js", "../@tsparticles/engine/browser/Enums/Types/StartValueType.js", "../@tsparticles/engine/browser/Utils/Utils.js", "../@tsparticles/engine/browser/Enums/Types/AlterType.js", "../@tsparticles/engine/browser/Utils/ColorUtils.js", "../@tsparticles/engine/browser/Utils/CanvasUtils.js", "../@tsparticles/engine/browser/Core/Canvas.js", "../@tsparticles/engine/browser/Enums/InteractivityDetect.js", "../@tsparticles/engine/browser/Core/Utils/EventListeners.js", "../@tsparticles/engine/browser/Enums/Types/EventType.js", "../@tsparticles/engine/browser/Options/Classes/OptionsColor.js", "../@tsparticles/engine/browser/Options/Classes/Background/Background.js", "../@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js", "../@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js", "../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js", "../@tsparticles/engine/browser/Enums/Types/DivType.js", "../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js", "../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js", "../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js", "../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js", "../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js", "../@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js", "../@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js", "../@tsparticles/engine/browser/Options/Classes/ManualParticle.js", "../@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js", "../@tsparticles/engine/browser/Options/Classes/Responsive.js", "../@tsparticles/engine/browser/Enums/Modes/ThemeMode.js", "../@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js", "../@tsparticles/engine/browser/Options/Classes/Theme/Theme.js", "../@tsparticles/engine/browser/Options/Classes/AnimationOptions.js", "../@tsparticles/engine/browser/Options/Classes/ColorAnimation.js", "../@tsparticles/engine/browser/Options/Classes/HslAnimation.js", "../@tsparticles/engine/browser/Options/Classes/AnimatableColor.js", "../@tsparticles/engine/browser/Enums/Modes/CollisionMode.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js", "../@tsparticles/engine/browser/Enums/Modes/OutMode.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js", "../@tsparticles/engine/browser/Enums/Modes/LimitMode.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js", "../@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js", "../@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js", "../@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js", "../@tsparticles/engine/browser/Utils/OptionsUtils.js", "../@tsparticles/engine/browser/Options/Classes/Options.js", "../@tsparticles/engine/browser/Enums/Types/InteractorType.js", "../@tsparticles/engine/browser/Core/Utils/InteractionManager.js", "../@tsparticles/engine/browser/Enums/Types/ParticleOutType.js", "../@tsparticles/engine/browser/Core/Particle.js", "../@tsparticles/engine/browser/Core/Utils/Point.js", "../@tsparticles/engine/browser/Types/RangeType.js", "../@tsparticles/engine/browser/Core/Utils/Ranges.js", "../@tsparticles/engine/browser/Core/Utils/QuadTree.js", "../@tsparticles/engine/browser/Core/Particles.js", "../@tsparticles/engine/browser/Core/Retina.js", "../@tsparticles/engine/browser/Core/Container.js", "../@tsparticles/engine/browser/Utils/EventDispatcher.js", "../@tsparticles/engine/browser/Core/Engine.js", "../@tsparticles/engine/browser/init.js", "../@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js", "../@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js", "../@tsparticles/engine/browser/Enums/Directions/RotateDirection.js", "../@tsparticles/engine/browser/Enums/Types/GradientType.js", "../@tsparticles/engine/browser/Enums/Types/EasingType.js", "../@tsparticles/engine/browser/index.js"],
  "sourcesContent": ["export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n", "export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n", "export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n", "import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n", "import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n", "export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n", "export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n", "export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n", "export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n", "export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n", "export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n", "import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n", "export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n", "import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n", "import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n", "export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n", "import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n", "export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n", "import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n", "export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n", "import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n", "import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n", "import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n", "import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n", "import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n", "import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n", "import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n", "import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n", "import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n", "export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n", "import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n", "import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n", "import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n", "import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n", "import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n", "import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n", "import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n", "export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n", "import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n", "import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n", "import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n", "import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n", "export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n", "export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n", "import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n", "export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n", "export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n", "import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n", "import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n", "import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n", "import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n", "import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n", "import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n", "import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.8.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n", "import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n", "export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n", "export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n", "export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n", "import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n"],
  "mappings": "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",
  "names": []
}
